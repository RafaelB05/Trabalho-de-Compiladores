// Generated from sinonimoScript.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class sinonimoScriptLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TIPO=1, ATR=2, AP=3, FP=4, AC=5, FC=6, OPA=7, OPL=8, OPC=9, ENDL=10, BOOL=11, 
		IF=12, ELSE=13, WHILE=14, PRINT=15, ID=16, NUM=17, STRING=18, WS=19;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"TIPO", "ATR", "AP", "FP", "AC", "FC", "OPA", "OPL", "OPC", "ENDL", "BOOL", 
			"IF", "ELSE", "WHILE", "PRINT", "ID", "NUM", "STRING", "LETRA", "DIGITO", 
			"WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'<-'", "'('", "')'", "'{'", "'}'", null, null, null, "'::'", 
			null, "'assumindo'", "'entretanto'", "'durante'", "'registre'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TIPO", "ATR", "AP", "FP", "AC", "FC", "OPA", "OPL", "OPC", "ENDL", 
			"BOOL", "IF", "ELSE", "WHILE", "PRINT", "ID", "NUM", "STRING", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public sinonimoScriptLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "sinonimoScript.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0013\u00b3\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0003\u0000?\b\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0003\u0007R\b\u0007\u0001\b\u0001\b\u0001\b"+
		"\u0001\b\u0001\b\u0003\bY\b\b\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n"+
		"\u0001\n\u0001\n\u0003\nb\b\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f"+
		"\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0005\u000f\u008d\b\u000f\n\u000f\f\u000f\u0090\t\u000f"+
		"\u0001\u0010\u0004\u0010\u0093\b\u0010\u000b\u0010\f\u0010\u0094\u0001"+
		"\u0010\u0001\u0010\u0004\u0010\u0099\b\u0010\u000b\u0010\f\u0010\u009a"+
		"\u0003\u0010\u009d\b\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0005\u0011"+
		"\u00a2\b\u0011\n\u0011\f\u0011\u00a5\t\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0004\u0014\u00ae"+
		"\b\u0014\u000b\u0014\f\u0014\u00af\u0001\u0014\u0001\u0014\u0000\u0000"+
		"\u0015\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0000\'\u0000)\u0013\u0001\u0000"+
		"\u0005\u0004\u0000%%*+--//\u0002\u0000<<>>\u0002\u0000AZaz\u0001\u0000"+
		"09\u0003\u0000\t\n\r\r  \u00bf\u0000\u0001\u0001\u0000\u0000\u0000\u0000"+
		"\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000"+
		"\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b"+
		"\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001"+
		"\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001"+
		"\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001"+
		"\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001"+
		"\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001"+
		"\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0001>\u0001\u0000\u0000\u0000\u0003"+
		"@\u0001\u0000\u0000\u0000\u0005C\u0001\u0000\u0000\u0000\u0007E\u0001"+
		"\u0000\u0000\u0000\tG\u0001\u0000\u0000\u0000\u000bI\u0001\u0000\u0000"+
		"\u0000\rK\u0001\u0000\u0000\u0000\u000fQ\u0001\u0000\u0000\u0000\u0011"+
		"X\u0001\u0000\u0000\u0000\u0013Z\u0001\u0000\u0000\u0000\u0015a\u0001"+
		"\u0000\u0000\u0000\u0017c\u0001\u0000\u0000\u0000\u0019m\u0001\u0000\u0000"+
		"\u0000\u001bx\u0001\u0000\u0000\u0000\u001d\u0080\u0001\u0000\u0000\u0000"+
		"\u001f\u0089\u0001\u0000\u0000\u0000!\u0092\u0001\u0000\u0000\u0000#\u009e"+
		"\u0001\u0000\u0000\u0000%\u00a8\u0001\u0000\u0000\u0000\'\u00aa\u0001"+
		"\u0000\u0000\u0000)\u00ad\u0001\u0000\u0000\u0000+,\u0005c\u0000\u0000"+
		",-\u0005h\u0000\u0000-.\u0005e\u0000\u0000./\u0005i\u0000\u0000/?\u0005"+
		"o\u0000\u000001\u0005e\u0000\u000012\u0005x\u0000\u000023\u0005a\u0000"+
		"\u000034\u0005t\u0000\u00004?\u0005o\u0000\u000056\u0005r\u0000\u0000"+
		"67\u0005i\u0000\u000078\u0005s\u0000\u000089\u0005c\u0000\u00009?\u0005"+
		"a\u0000\u0000:;\u0005l\u0000\u0000;<\u0005o\u0000\u0000<=\u0005o\u0000"+
		"\u0000=?\u0005b\u0000\u0000>+\u0001\u0000\u0000\u0000>0\u0001\u0000\u0000"+
		"\u0000>5\u0001\u0000\u0000\u0000>:\u0001\u0000\u0000\u0000?\u0002\u0001"+
		"\u0000\u0000\u0000@A\u0005<\u0000\u0000AB\u0005-\u0000\u0000B\u0004\u0001"+
		"\u0000\u0000\u0000CD\u0005(\u0000\u0000D\u0006\u0001\u0000\u0000\u0000"+
		"EF\u0005)\u0000\u0000F\b\u0001\u0000\u0000\u0000GH\u0005{\u0000\u0000"+
		"H\n\u0001\u0000\u0000\u0000IJ\u0005}\u0000\u0000J\f\u0001\u0000\u0000"+
		"\u0000KL\u0007\u0000\u0000\u0000L\u000e\u0001\u0000\u0000\u0000MN\u0005"+
		"|\u0000\u0000NR\u0005|\u0000\u0000OP\u0005&\u0000\u0000PR\u0005&\u0000"+
		"\u0000QM\u0001\u0000\u0000\u0000QO\u0001\u0000\u0000\u0000R\u0010\u0001"+
		"\u0000\u0000\u0000SY\u0007\u0001\u0000\u0000TU\u0005>\u0000\u0000UY\u0005"+
		"<\u0000\u0000VW\u0005<\u0000\u0000WY\u0005>\u0000\u0000XS\u0001\u0000"+
		"\u0000\u0000XT\u0001\u0000\u0000\u0000XV\u0001\u0000\u0000\u0000Y\u0012"+
		"\u0001\u0000\u0000\u0000Z[\u0005:\u0000\u0000[\\\u0005:\u0000\u0000\\"+
		"\u0014\u0001\u0000\u0000\u0000]^\u0005g\u0000\u0000^b\u0005g\u0000\u0000"+
		"_`\u0005f\u0000\u0000`b\u0005f\u0000\u0000a]\u0001\u0000\u0000\u0000a"+
		"_\u0001\u0000\u0000\u0000b\u0016\u0001\u0000\u0000\u0000cd\u0005a\u0000"+
		"\u0000de\u0005s\u0000\u0000ef\u0005s\u0000\u0000fg\u0005u\u0000\u0000"+
		"gh\u0005m\u0000\u0000hi\u0005i\u0000\u0000ij\u0005n\u0000\u0000jk\u0005"+
		"d\u0000\u0000kl\u0005o\u0000\u0000l\u0018\u0001\u0000\u0000\u0000mn\u0005"+
		"e\u0000\u0000no\u0005n\u0000\u0000op\u0005t\u0000\u0000pq\u0005r\u0000"+
		"\u0000qr\u0005e\u0000\u0000rs\u0005t\u0000\u0000st\u0005a\u0000\u0000"+
		"tu\u0005n\u0000\u0000uv\u0005t\u0000\u0000vw\u0005o\u0000\u0000w\u001a"+
		"\u0001\u0000\u0000\u0000xy\u0005d\u0000\u0000yz\u0005u\u0000\u0000z{\u0005"+
		"r\u0000\u0000{|\u0005a\u0000\u0000|}\u0005n\u0000\u0000}~\u0005t\u0000"+
		"\u0000~\u007f\u0005e\u0000\u0000\u007f\u001c\u0001\u0000\u0000\u0000\u0080"+
		"\u0081\u0005r\u0000\u0000\u0081\u0082\u0005e\u0000\u0000\u0082\u0083\u0005"+
		"g\u0000\u0000\u0083\u0084\u0005i\u0000\u0000\u0084\u0085\u0005s\u0000"+
		"\u0000\u0085\u0086\u0005t\u0000\u0000\u0086\u0087\u0005r\u0000\u0000\u0087"+
		"\u0088\u0005e\u0000\u0000\u0088\u001e\u0001\u0000\u0000\u0000\u0089\u008e"+
		"\u0003%\u0012\u0000\u008a\u008d\u0003\'\u0013\u0000\u008b\u008d\u0003"+
		"%\u0012\u0000\u008c\u008a\u0001\u0000\u0000\u0000\u008c\u008b\u0001\u0000"+
		"\u0000\u0000\u008d\u0090\u0001\u0000\u0000\u0000\u008e\u008c\u0001\u0000"+
		"\u0000\u0000\u008e\u008f\u0001\u0000\u0000\u0000\u008f \u0001\u0000\u0000"+
		"\u0000\u0090\u008e\u0001\u0000\u0000\u0000\u0091\u0093\u0003\'\u0013\u0000"+
		"\u0092\u0091\u0001\u0000\u0000\u0000\u0093\u0094\u0001\u0000\u0000\u0000"+
		"\u0094\u0092\u0001\u0000\u0000\u0000\u0094\u0095\u0001\u0000\u0000\u0000"+
		"\u0095\u009c\u0001\u0000\u0000\u0000\u0096\u0098\u0005,\u0000\u0000\u0097"+
		"\u0099\u0003\'\u0013\u0000\u0098\u0097\u0001\u0000\u0000\u0000\u0099\u009a"+
		"\u0001\u0000\u0000\u0000\u009a\u0098\u0001\u0000\u0000\u0000\u009a\u009b"+
		"\u0001\u0000\u0000\u0000\u009b\u009d\u0001\u0000\u0000\u0000\u009c\u0096"+
		"\u0001\u0000\u0000\u0000\u009c\u009d\u0001\u0000\u0000\u0000\u009d\"\u0001"+
		"\u0000\u0000\u0000\u009e\u00a3\u0005\"\u0000\u0000\u009f\u00a2\u0003%"+
		"\u0012\u0000\u00a0\u00a2\u0003!\u0010\u0000\u00a1\u009f\u0001\u0000\u0000"+
		"\u0000\u00a1\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a5\u0001\u0000\u0000"+
		"\u0000\u00a3\u00a1\u0001\u0000\u0000\u0000\u00a3\u00a4\u0001\u0000\u0000"+
		"\u0000\u00a4\u00a6\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001\u0000\u0000"+
		"\u0000\u00a6\u00a7\u0005\"\u0000\u0000\u00a7$\u0001\u0000\u0000\u0000"+
		"\u00a8\u00a9\u0007\u0002\u0000\u0000\u00a9&\u0001\u0000\u0000\u0000\u00aa"+
		"\u00ab\u0007\u0003\u0000\u0000\u00ab(\u0001\u0000\u0000\u0000\u00ac\u00ae"+
		"\u0007\u0004\u0000\u0000\u00ad\u00ac\u0001\u0000\u0000\u0000\u00ae\u00af"+
		"\u0001\u0000\u0000\u0000\u00af\u00ad\u0001\u0000\u0000\u0000\u00af\u00b0"+
		"\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1\u00b2"+
		"\u0006\u0014\u0000\u0000\u00b2*\u0001\u0000\u0000\u0000\r\u0000>QXa\u008c"+
		"\u008e\u0094\u009a\u009c\u00a1\u00a3\u00af\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}