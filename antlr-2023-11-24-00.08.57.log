2023-11-24 00:08:56:794 grammar LogManager.java:25 before: (COMBINED_GRAMMAR hphGramatica (RULES (RULE exp (BLOCK (ALT TIPO ' ' ID ' ' ATR ' ' NUM))) (RULE TIPO (BLOCK (ALT 'coletado') (ALT 'dolar') (ALT 'distancia') (ALT 'juiz'))) (RULE ATR (BLOCK (ALT '<-'))) (RULE AB (BLOCK (ALT '('))) (RULE FB (BLOCK (ALT ')'))) (RULE OPA (BLOCK (ALT '+') (ALT '-') (ALT '*') (ALT '|') (ALT '%'))) (RULE OPL (BLOCK (ALT '><') (ALT '<>') (ALT '>') (ALT '<') (ALT '=?'))) (RULE ENDL (BLOCK (ALT '::'))) (RULE IF (BLOCK (ALT 'aah'))) (RULE ELSE (BLOCK (ALT 'colecao'))) (RULE WHILE (BLOCK (ALT 'quando?'))) (RULE ID (BLOCK (ALT LETRA (* (BLOCK (ALT DIGITO) (ALT LETRA)))))) (RULE NUM (BLOCK (ALT (+ (BLOCK (ALT DIGITO))) (? (BLOCK (ALT ',' (+ (BLOCK (ALT DIGITO))))))))) (RULE LETRA (RULEMODIFIERS fragment) (BLOCK (ALT [a-zA-Z]))) (RULE DIGITO (RULEMODIFIERS fragment) (BLOCK (ALT [0-9])))))
2023-11-24 00:08:56:809 grammar LogManager.java:25 after: (COMBINED_GRAMMAR hphGramatica (RULES (RULE exp (BLOCK (ALT TIPO ' ' ID ' ' ATR ' ' NUM))) (RULE TIPO (BLOCK (ALT 'coletado') (ALT 'dolar') (ALT 'distancia') (ALT 'juiz'))) (RULE ATR (BLOCK (ALT '<-'))) (RULE AB (BLOCK (ALT '('))) (RULE FB (BLOCK (ALT ')'))) (RULE OPA (BLOCK (ALT (SET '+' '-' '*' '|' '%')))) (RULE OPL (BLOCK (ALT '><') (ALT '<>') (ALT '>') (ALT '<') (ALT '=?'))) (RULE ENDL (BLOCK (ALT '::'))) (RULE IF (BLOCK (ALT 'aah'))) (RULE ELSE (BLOCK (ALT 'colecao'))) (RULE WHILE (BLOCK (ALT 'quando?'))) (RULE ID (BLOCK (ALT LETRA (* (BLOCK (ALT DIGITO) (ALT LETRA)))))) (RULE NUM (BLOCK (ALT (+ (BLOCK (ALT DIGITO))) (? (BLOCK (ALT ',' (+ (BLOCK (ALT DIGITO))))))))) (RULE LETRA (RULEMODIFIERS fragment) (BLOCK (ALT [a-zA-Z]))) (RULE DIGITO (RULEMODIFIERS fragment) (BLOCK (ALT [0-9])))))
2023-11-24 00:08:56:831 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR hphGramatica (RULES (RULE exp (BLOCK (ALT TIPO ' ' ID ' ' ATR ' ' NUM)))))
2023-11-24 00:08:56:832 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR hphGramaticaLexer (RULES (RULE T__0 (BLOCK (ALT ' '))) (RULE TIPO (BLOCK (ALT 'coletado') (ALT 'dolar') (ALT 'distancia') (ALT 'juiz'))) (RULE ATR (BLOCK (ALT '<-'))) (RULE AB (BLOCK (ALT '('))) (RULE FB (BLOCK (ALT ')'))) (RULE OPA (BLOCK (ALT (SET '+' '-' '*' '|' '%')))) (RULE OPL (BLOCK (ALT '><') (ALT '<>') (ALT '>') (ALT '<') (ALT '=?'))) (RULE ENDL (BLOCK (ALT '::'))) (RULE IF (BLOCK (ALT 'aah'))) (RULE ELSE (BLOCK (ALT 'colecao'))) (RULE WHILE (BLOCK (ALT 'quando?'))) (RULE ID (BLOCK (ALT LETRA (* (BLOCK (ALT DIGITO) (ALT LETRA)))))) (RULE NUM (BLOCK (ALT (+ (BLOCK (ALT DIGITO))) (? (BLOCK (ALT ',' (+ (BLOCK (ALT DIGITO))))))))) (RULE LETRA (RULEMODIFIERS fragment) (BLOCK (ALT [a-zA-Z]))) (RULE DIGITO (RULEMODIFIERS fragment) (BLOCK (ALT [0-9])))))
2023-11-24 00:08:57:086 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, TIPO=2, ATR=3, AB=4, FB=5, OPA=6, OPL=7, ENDL=8, IF=9, ELSE=10, WHILE=11, ID=12, NUM=13}
2023-11-24 00:08:57:087 semantics LogManager.java:25 strings={' '=1, '<-'=3, '('=4, ')'=5, '::'=8, 'aah'=9, 'colecao'=10, 'quando?'=11}
